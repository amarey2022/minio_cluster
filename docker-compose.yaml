version: '3.7'

# Settings and configurations that are common for all containers
x-minio-common: &minio-common
  image: quay.io/minio/minio
  command: server --address 0.0.0.0:9000 --console-address ":9001" http://minio{1...4}/data1
  expose:
    - "9000"
    - "9001"
  environment:
    MINIO_ROOT_USER: minio
    MINIO_ROOT_PASSWORD: minio123
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3

# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
services:
  minio1:
    <<: *minio-common
    hostname: minio1
    ports:
      - "5011:9000"
      - "5012:9001"
    volumes:
      - data1-1:/data1
    deploy:
      placement:
        constraints:
          - node.hostname==host1
    networks:
      - minio_default

  minio2:
    <<: *minio-common
    hostname: minio2
    volumes:
      - data2-1:/data1
    deploy:
      placement:
        constraints:
          - node.hostname==host1
    ports:
      - "5013:9000"
      - "5014:9001"
    networks:
      - minio_default
  minio3:
    <<: *minio-common
    hostname: minio3
    volumes:
      - data3-1:/data1
    deploy:
      placement:
        constraints:
          - node.hostname==host1
    networks:
      - minio_default
    ports:
      - "5016:9000"
      - "5015:9001"
  minio4:
    <<: *minio-common
    hostname: minio4
    volumes:
      - data4-1:/data1
    deploy:
      placement:
        constraints:
          - node.hostname==host1
    networks:
      - minio_default
    ports:
      - "5017:9000"
      - "5018:9001"
## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data2-1:
  data3-1:
  data4-1:
networks:
  minio_default:
